task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'

    doLast() {
        def gradleOpts = "-Xmx2024m"
        def gradleBatOpts = "$gradleOpts -XX:MaxHeapSize=256m"
        File wrapperFile = file("gradlew")
        wrapperFile.text = wrapperFile.text.replace("DEFAULT_JVM_OPTS=", "GRADLE_OPTS=\"$gradleOpts \$GRADLE_OPTS\"\nDEFAULT_JVM_OPTS=")
        File wrapperBatFile = file("gradlew.bat")
        wrapperBatFile.text = wrapperBatFile.text.replace("set DEFAULT_JVM_OPTS=", "set GRADLE_OPTS=$gradleBatOpts %GRADLE_OPTS%\nset DEFAULT_JVM_OPTS=")
    }

}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.2")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE")
        classpath("org.springframework:springloaded:1.2.6.RELEASE")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.7")
        classpath("gradle.plugin.org.liquibase:liquibase-gradle-plugin:1.2.4")
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: "org.asciidoctor.convert"
apply plugin: "org.liquibase.gradle"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate4")
    compile("io.rest-assured:rest-assured:3.0.3")
    compile("io.rest-assured:json-schema-validator:3.0.3")
    compile("mysql:mysql-connector-java")
    compile("joda-time:joda-time:2.2")
    compile("com.jayway.jsonpath:json-path:2.0.0")
    compile("org.liquibase:liquibase-core:3.5.3")
    testCompile("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("io.cucumber:cucumber-java:2.3.0")
    testCompile("io.cucumber:cucumber-junit:2.3.0")
    testCompile("io.cucumber:cucumber-spring:2.3.0")
    testCompile("io.cucumber:cucumber-jvm:2.3.0")
    testCompile("junit:junit:4.12")
    testCompile("pl.pragmatists:JUnitParams:1.1.1")
    testCompile("com.tngtech.java:junit-dataprovider:1.12.0")
    testCompile("org.springframework.restdocs:spring-restdocs-restassured")
    testCompile("org.springframework.security:spring-security-test")
    asciidoctor("org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.0.RELEASE")
}

ext {
    snippetsDir = file('build/generated-snippets')
}

testSets {
    apidoc { dirName = 'doc' }
}

bootRepackage {
    mainClass = 'com.mlyauth.Main'
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    outputDir "build/asciidoc"
    dependsOn test
    sourceDir 'src/doc/asciidoc'
}

jar {

    dependsOn asciidoctor

    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }

    baseName = 'mly-auth'
}

task validateExamples() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.mlyauth.atests', '--tags', '~@Skip', 'src/test/resources/features']
        }
    }
}